{
    "swagger": "2.0",
    "info": {
        "description": "APIs for every action to do with Safe Return.",
        "title": "Safe Return Backend",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/auth/signup": {
            "post": {
                "description": "Creates a new user account using name, email, password, and a one-time email code.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign up a new user",
                "parameters": [
                    {
                        "description": "SignUp request payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authendpoints.signUpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Signup successful, returns access and refresh tokens",
                        "schema": {
                            "$ref": "#/definitions/authendpoints.signUpResponse"
                        }
                    },
                    "400": {
                        "description": "Incorrect one-time code or bad request",
                        "schema": {
                            "$ref": "#/definitions/httputils.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Missing required fields",
                        "schema": {
                            "$ref": "#/definitions/httputils.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Email not verified / OTP expired",
                        "schema": {
                            "$ref": "#/definitions/httputils.ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "$ref": "#/definitions/httputils.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Email already in use",
                        "schema": {
                            "$ref": "#/definitions/httputils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/verify-email": {
            "post": {
                "description": "Checks if an email is valid and not already in use.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Verify email for signup",
                "parameters": [
                    {
                        "description": "Email in JSON",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authendpoints.emailVerifyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email valid",
                        "schema": {
                            "$ref": "#/definitions/authendpoints.emailVerifyResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid email",
                        "schema": {
                            "$ref": "#/definitions/httputils.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Missing required fields",
                        "schema": {
                            "$ref": "#/definitions/httputils.ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "$ref": "#/definitions/httputils.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Email already in use",
                        "schema": {
                            "$ref": "#/definitions/httputils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/httputils.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "authendpoints.emailVerifyRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "authendpoints.emailVerifyResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                }
            }
        },
        "authendpoints.signUpRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "emailCode": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "authendpoints.signUpResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "httputils.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        }
    }
}
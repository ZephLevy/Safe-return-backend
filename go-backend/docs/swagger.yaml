basePath: /
definitions:
  authendpoints.emailVerifyRequest:
    properties:
      email:
        type: string
    type: object
  authendpoints.emailVerifyResponse:
    properties:
      response:
        type: string
    type: object
  authendpoints.signUpRequest:
    properties:
      email:
        type: string
      emailCode:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
    type: object
  authendpoints.signUpResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  httputils.ErrorResponse:
    properties:
      error:
        type: string
    type: object
info:
  contact: {}
  description: APIs for every action to do with Safe Return.
  title: Safe Return Backend
  version: "1.0"
paths:
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Creates a new user account using name, email, password, and a one-time
        email code.
      parameters:
      - description: SignUp request payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/authendpoints.signUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Signup successful, returns access and refresh tokens
          schema:
            $ref: '#/definitions/authendpoints.signUpResponse'
        "400":
          description: Incorrect one-time code or bad request
          schema:
            $ref: '#/definitions/httputils.ErrorResponse'
        "401":
          description: Missing required fields
          schema:
            $ref: '#/definitions/httputils.ErrorResponse'
        "403":
          description: Email not verified / OTP expired
          schema:
            $ref: '#/definitions/httputils.ErrorResponse'
        "405":
          description: Method not allowed
          schema:
            $ref: '#/definitions/httputils.ErrorResponse'
        "409":
          description: Email already in use
          schema:
            $ref: '#/definitions/httputils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputils.ErrorResponse'
      summary: Sign up a new user
      tags:
      - Auth
  /auth/verify-email:
    post:
      consumes:
      - application/json
      description: Checks if an email is valid and not already in use. Responds with
        plain text.
      parameters:
      - description: Email in JSON
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/authendpoints.emailVerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Email valid
          schema:
            $ref: '#/definitions/authendpoints.emailVerifyResponse'
        "400":
          description: Invalid email
          schema:
            $ref: '#/definitions/httputils.ErrorResponse'
        "401":
          description: Missing required fields
          schema:
            $ref: '#/definitions/httputils.ErrorResponse'
        "405":
          description: Method not allowed
          schema:
            $ref: '#/definitions/httputils.ErrorResponse'
        "409":
          description: Email already in use
          schema:
            $ref: '#/definitions/httputils.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/httputils.ErrorResponse'
      summary: Verify email for signup
      tags:
      - Auth
swagger: "2.0"
